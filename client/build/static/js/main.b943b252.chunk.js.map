{"version":3,"sources":["actions/errorActions.js","actions/types.js","components/auth/RegisterModal.jsx","actions/userActions.js","components/auth/Logout.jsx","components/auth/LoginModal.jsx","components/AppNavbar.jsx","components/ItemModal.jsx","components/ShoppingList.jsx","App.js","serviceWorker.js","reducers/rootReducer.js","reducers/authReducer.js","reducers/errorReducer.js","redux_store/store.js","index.js"],"names":["returnError","msg","status","id","type","payload","RegisterModal","dispatch","useDispatch","errFromReducer","useSelector","state","errorReducer","isAuthenticated","authReducer","React","useState","show","setShow","name","setName","email","setEmail","password","setPassword","error","setError","handleToggle","clearError","handleInputOnChange","e","target","value","useEffect","NavLink","onClick","Modal","size","onHide","Header","closeButton","className","ModalBody","Alert","variant","Form","Group","Label","Control","placeholder","onChange","ModalFooter","Button","block","newUser","axios","post","JSON","stringify","headers","then","res","data","catch","err","response","registerUser","Logout","LoginModal","handleShowOnClick","user","loginUser","AppNavbar","setAuth","isOpen","setIsOpen","isAuth","userLinks","NavItem","guestLinks","Navbar","bg","expand","Container","NavbarBrand","href","Toggle","aria-controls","Collapse","Nav","ItemModal","handleOnHide","as","rows","preventDefault","token","localStorage","getItem","config","console","log","ShoppingList","items","rootReducer","ListGroup","style","marginBottom","TransitionGroup","map","_id","CSSTransition","key","timeout","classNames","Item","delete","handleAddBtnOnClick","App","get","loadUser","Boolean","window","location","hostname","match","initialState","loading","action","filter","item","isLoading","setItem","removeItem","intialState","createStore","combineReducers","composeWithDevTools","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b943b252.chunk.js","sourcesContent":["import { GET_ERROR, CLEAR_ERROR } from \"./types\";\r\n\r\nexport const returnError = (msg, status, id = null) => {\r\n  return {\r\n    type: GET_ERROR,\r\n    payload: { msg, status, id },\r\n  };\r\n};\r\n\r\nexport const clearError = (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERROR,\r\n  });\r\n};\r\n","export const DELETE_SHOPPING_ITEM = \"DELETE_SHOPPING_ITEM\";\r\nexport const GET_SHOPPING_ITEMS = \"GET_SHOPPING_ITEMS\";\r\nexport const ADD_SHOPPING_ITEM = \"ADD_SHOPPING_ITEM\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\r\n\r\n// User Auth & Registration\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\nexport const LOGOUT_SUCCES = \"LOGOUT_SUCCES\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\r\nexport const GET_ERROR = \"GET_ERROR\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Form,\r\n  NavLink,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\nimport { registerUser } from \"../../actions/userActions\";\r\nimport { clearError } from \"../../actions/errorActions\";\r\n\r\nconst RegisterModal = () => {\r\n  // Dispatch & Selector hook\r\n  const dispatch = useDispatch();\r\n  const errFromReducer = useSelector((state) => state.errorReducer);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.authReducer.isAuthenticated\r\n  );\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const handleShowOnClick = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    clearError(dispatch);\r\n    setShow(!show);\r\n  };\r\n\r\n  const handleInputOnChange = (e) => {\r\n    const type = e.target.type;\r\n    switch (type) {\r\n      case \"text\":\r\n        setName(e.target.value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(e.target.value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleRegisterBtnOnClick = () => {\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password,\r\n    };\r\n    registerUser(newUser, dispatch);\r\n  };\r\n\r\n  // Listening for errFromReducer\r\n  React.useEffect(() => {\r\n    if (errFromReducer.id === \"REGISTER_FAILED\") {\r\n      setError(errFromReducer.msg);\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (show) {\r\n      if (isAuthenticated) handleToggle();\r\n    }\r\n  }, [errFromReducer, isAuthenticated]);\r\n\r\n  return (\r\n    <>\r\n      <NavLink onClick={handleShowOnClick}>Register</NavLink>\r\n      <Modal show={show} size=\"md\" onHide={handleToggle}>\r\n        <Modal.Header closeButton className=\"font-weight-bold display-4\">\r\n          Register\r\n        </Modal.Header>\r\n        <ModalBody>\r\n          {error && <Alert variant=\"danger\">{error.error}</Alert>}\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                className=\"mb-4\"\r\n                onChange={handleInputOnChange}\r\n              ></Form.Control>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"mb-4\"\r\n                onChange={handleInputOnChange}\r\n              ></Form.Control>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"mb-4\"\r\n                onChange={handleInputOnChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"dark\" block onClick={handleRegisterBtnOnClick}>\r\n            Register\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterModal;\r\n","import {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT_SUCCES,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILED,\r\n} from \"./types\";\r\nimport { returnError } from \"./errorActions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const loadUser = (dispatch, token) => {\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Check token and add to the headers\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  // Fetch the user\r\n  axios\r\n    .get(\"/api/auth/user\", config)\r\n    .then((res) => dispatch({ type: USER_LOADED, payload: res.data }))\r\n    .catch((err) => {\r\n      dispatch(returnError(err.response.data, err.response.status));\r\n      dispatch({ type: AUTH_ERROR });\r\n    });\r\n};\r\n\r\nexport const registerUser = (newUser, dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // POST creating new user\r\n  axios\r\n    .post(\"/api/users\", JSON.stringify(newUser), config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnError(err.response.data, err.response.status, \"REGISTER_FAILED\")\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAILED,\r\n      });\r\n    });\r\n};\r\n\r\nexport const loginUser = (dispatch, user) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  axios\r\n    .post(\"/api/auth\", JSON.stringify(user), config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnError(err.response.data, err.response.status, \"LOGIN_FAILED\")\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n      });\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LOGOUT_SUCCES } from \"../../actions/types\";\r\n\r\nimport { NavLink } from \"react-bootstrap\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogoutOnClick = () => {\r\n    dispatch({\r\n      type: LOGOUT_SUCCES,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavLink onClick={handleLogoutOnClick}>Logout</NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/userActions\";\r\nimport { CLEAR_ERROR } from \"../../actions/types\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Form,\r\n  NavLink,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\nconst LoginModal = () => {\r\n  // Dispatch & Selector hook\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.authReducer.isAuthenticated\r\n  );\r\n  const errReducer = useSelector((state) => state.errorReducer);\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [err, setErr] = React.useState(null);\r\n\r\n  // Display or hide the modal\r\n  const handleShowOnClick = () => {\r\n    setShow(!show);\r\n    if (err) {\r\n      dispatch({\r\n        type: CLEAR_ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Get the email and password\r\n  const handleInputOnChange = (e) => {\r\n    const type = e.target.type;\r\n    switch (type) {\r\n      case \"email\":\r\n        setEmail(e.target.value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Handle log in btn onClick\r\n  const handleLoginBtnOnClick = () => {\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    loginUser(dispatch, user);\r\n\r\n    if (isAuthenticated) {\r\n      handleShowOnClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavLink onClick={handleShowOnClick}>Login</NavLink>\r\n      <Modal show={show} size=\"md\" onHide={handleShowOnClick}>\r\n        <Modal.Header closeButton className=\"font-weight-bold display-4\">\r\n          Login\r\n        </Modal.Header>\r\n        <ModalBody>\r\n          {err && <Alert variant=\"danger\">{err.error}</Alert>}\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"mb-4\"\r\n                onChange={handleInputOnChange}\r\n              ></Form.Control>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"mb-4\"\r\n                onChange={handleInputOnChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"dark\" block onClick={handleLoginBtnOnClick}>\r\n            Login\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Navbar, NavbarBrand, Nav, NavItem, Container } from \"react-bootstrap\";\r\nimport RegisterModal from \"./auth/RegisterModal\";\r\nimport Logout from \"./auth/Logout\";\r\nimport LoginModal from \"./auth/LoginModal\";\r\n\r\nconst AppNavbar = () => {\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.authReducer.isAuthenticated\r\n  );\r\n  const user = useSelector((state) => state.authReducer.user);\r\n\r\n  React.useEffect(() => {\r\n    if (isAuthenticated) {\r\n      setAuth(true);\r\n    } else {\r\n      setAuth(false);\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // State Hooks\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isAuth, setAuth] = React.useState(false);\r\n\r\n  // Toggle\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // User links\r\n  const userLinks = (\r\n    <>\r\n      <NavItem>\r\n        <span className=\"navbar-text mr-3\">\r\n          <strong>{user && `Welcome, ${user.name}`}</strong>\r\n        </span>\r\n      </NavItem>\r\n      <NavItem>\r\n        <Logout />\r\n      </NavItem>\r\n    </>\r\n  );\r\n\r\n  // Guest links\r\n  const guestLinks = (\r\n    <>\r\n      <NavItem>\r\n        <RegisterModal />\r\n      </NavItem>\r\n      <NavItem>\r\n        <LoginModal />\r\n      </NavItem>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" className=\"mb-5\">\r\n        <Container>\r\n          <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={toggle} />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">{isAuth ? userLinks : guestLinks}</Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { ADD_SHOPPING_ITEM } from \"../actions/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Container,\r\n  Button,\r\n  Modal,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nconst ItemModal = () => {\r\n  // useDispatch hook\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.authReducer.isAuthenticated);\r\n\r\n  // Show hook\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  // Textarea value hook\r\n  const [name, setName] = React.useState(\"\");\r\n\r\n  // Handle onShow\r\n  const handleOnShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  // Handle onHide\r\n  const handleOnHide = () => setShow(false);\r\n\r\n  // Handle textarea onChange\r\n  const handleTextareaOnChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  // Handle Add item onClick\r\n  const handleAddItemOnClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (token) {\r\n      config.headers[\"x-auth-token\"] = token;\r\n    }\r\n\r\n    // Send POST request to api\r\n    axios\r\n      .post(\"/api/items\", { name: name }, config)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: ADD_SHOPPING_ITEM,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(`POST error: ${err}`));\r\n\r\n    handleOnHide();\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-4\">\r\n      {isAuth ? (\r\n        <Button onClick={handleOnShow} variant=\"dark\">\r\n          Add item\r\n        </Button>\r\n      ) : (\r\n        <h4>Please Login to manage items</h4>\r\n      )}\r\n\r\n      <Modal show={show} onHide={handleOnHide} size=\"lg\">\r\n        <Modal.Header closeButton>Add To Shopping List</Modal.Header>\r\n        <ModalBody>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Add Item</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                placeholder=\"Add Shopping Item\"\r\n                onChange={handleTextareaOnChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"dark\" block onClick={handleAddItemOnClick}>\r\n            Add Item\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ItemModal;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Container, ListGroup, Button } from \"react-bootstrap\";\r\n\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DELETE_SHOPPING_ITEM } from \"../actions/types\";\r\n\r\nconst ShoppingList = () => {\r\n  // Redux useSelector Hook\r\n  const items = useSelector((state) => state.rootReducer.items);\r\n  const isAuth = useSelector((state) => state.authReducer.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddBtnOnClick = (_id) => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    if (token) {\r\n      config.headers[\"x-auth-token\"] = token;\r\n    }\r\n\r\n    // Send DELETE req to api\r\n    axios\r\n      .delete(`/api/items/${_id}`, config)\r\n      .then((res) => {\r\n        console.log(`Successfully deleted the item with id: ${_id}`);\r\n        dispatch({\r\n          type: DELETE_SHOPPING_ITEM,\r\n          payload: _id,\r\n        });\r\n        console.log(\"Executed the dispatch func\");\r\n      })\r\n      .catch((err) => console.log(`DELETE error: ${err}, id:${_id}`));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ListGroup style={{ marginBottom: \"1rem\" }}>\r\n        <TransitionGroup className=\"todo-list\">\r\n          {items &&\r\n            items.map(({ _id, name }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                <ListGroup.Item>\r\n                  {isAuth && (\r\n                    <Button\r\n                      className=\"remove-btn\"\r\n                      variant=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleAddBtnOnClick(_id)}\r\n                    >\r\n                      &times;\r\n                    </Button>\r\n                  )}\r\n\r\n                  {name}\r\n                </ListGroup.Item>\r\n              </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShoppingList;\r\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { GET_SHOPPING_ITEMS, ITEMS_LOADING } from \"./actions/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AppNavbar from \"./components/AppNavbar\";\nimport ItemModal from \"./components/ItemModal\";\nimport ShoppingList from \"./components/ShoppingList\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport { loadUser } from \"./actions/userActions\";\n\nfunction App() {\n  // Dispatch & Selector hook\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.authReducer.token);\n\n  // Fetch shopping items\n  React.useEffect(() => {\n    // Auth user\n    loadUser(dispatch, token);\n\n    // Set items loading to true\n    dispatch({\n      type: ITEMS_LOADING,\n    });\n\n    axios.get(\"/api/items\").then((res) =>\n      dispatch({\n        type: GET_SHOPPING_ITEMS,\n        payload: res.data,\n      })\n    );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <AppNavbar />\n      <ItemModal />\n      <ShoppingList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  DELETE_SHOPPING_ITEM,\r\n  ADD_SHOPPING_ITEM,\r\n  ITEMS_LOADING,\r\n  GET_SHOPPING_ITEMS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false,\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_SHOPPING_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_SHOPPING_ITEM:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload],\r\n      };\r\n    case DELETE_SHOPPING_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item._id !== action.payload),\r\n      };\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT_SUCCES,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAILED:\r\n    case LOGOUT_SUCCES:\r\n    case REGISTER_FAILED:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isLoading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { GET_ERROR, CLEAR_ERROR } from \"../actions/types\";\r\n\r\nconst intialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nconst errorReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ERROR:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id,\r\n      };\r\n    case CLEAR_ERROR:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default errorReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport errorReducer from \"../reducers/errorReducer\";\r\n\r\nexport default createStore(\r\n  combineReducers({ rootReducer, authReducer, errorReducer }),\r\n  composeWithDevTools()\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux_store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}